
@using System.Data;
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "APPOINTMENT CREATION";
    DataTable dataTable = ViewBag.DataSet;
     var dataRows = dataTable.AsEnumerable();
     var selectedValue = ViewBag.SelectedValue;
}

@model Zencareservice.Models.Aptcrt;
<html>

    <head>
        <title>Create Appointment</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta name="author" content="Gopi">
    </head>

  <body> 

    <section class="content-header">
      <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Appointment</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a asp-action="Aptlist" asp-controller="Appointments">Appointment List</a></li>
                    <li class="breadcrumb-item active"><b style="color:black">Create Appointment</b></li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
    </section>
    <div class="container-fluid">
    <div class="col-md-12">
        <div class="card card-info">
            <div class="card-header">
                <h3 class="card-title">@ViewData["Title"]</h3>
                <h5 style="color:red" class="form-title"> @ViewBag.Message</h5>
            </div>
            <form class="form-appointment" id="register-form" asp-action="CreateAppointment" asp-controller="Appointments" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="returnUrl" value="@ViewData["ReturnUrl"]" />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="card-body">
                    <div class="form-group row">
                        <div class="form-group col-md-3">
                            <label asp-for="AptCategory">Booking For</label>
                            <select class="form-control select2" id="DDLAptCategory"
                                    asp-for="AptCategory" asp-items='new SelectList(new List<SelectListItem>
                                        {
                                            new SelectListItem { Value = "select", Text = "--Pls--Select--" },
                                            new SelectListItem { Value = "self", Text = "Self" },
                                            new SelectListItem { Value = "others", Text = "Others" }
                                         }, "Value", "Text")'></select>
                            <span asp-validation-for="AptCategory" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="DoctorFirstName">Doctor FirstName</label>
                            @{
                                var mm = ViewBag.YourDataList;
                            }

                            @Html.DropDownListFor(model => model.DoctorFirstName, ViewBag.DFname as List<SelectListItem>, "Please select", new { @class = "form-control",Id="DDLDFname" })
                            <span asp-validation-for="DoctorFirstName" class="text-danger" />
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="PatientFirstName">PatientName</label>
                            <input asp-for="PatientFirstName" type="text" class="form-control" id="firstname" placeholder="Patient FirstName" />
                            <span asp-validation-for="PatientFirstName" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="PatientLastName">Patient LastName</label>
                            <input asp-for="PatientLastName" type="text" class="form-control" id="lastname" placeholder="Patient LastName" />
                            <span asp-validation-for="PatientLastName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="form-group col-md-3">
                            <label asp-for="PatientAge">Age</label>
                            <input asp-for="PatientAge" type="text" class="form-control" id="age" placeholder="Age">
                            <span asp-validation-for="PatientAge" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="PatientGender">Gender</label>
                            @{
                                var mma = ViewBag.YourDataList;
                            }

                            @Html.DropDownListFor(model => model.PatientGender, ViewBag.Gendername as List<SelectListItem>,"Please select", new { @class = "form-control" })
                            <span asp-validation-for="PatientGender" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="Patientphoneno">ContactNo</label>
                            <input asp-for="Patientphoneno" type="tel" class="form-control" id="contactno" placeholder="PatientContactNo">
                            <span asp-validation-for="Patientphoneno" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="PatientEmail">Patient Email</label>
                            <input asp-for="PatientEmail" type="text" class="form-control" id="email" />
                            <span asp-validation-for="PatientEmail" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="form-group col-md-6">
                            <label asp-for="ReasonType">ReasonType</label>
                            <input asp-for="ReasonType" type="text" class="form-control" id="reasontype">
                            <span asp-validation-for="ReasonType" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="AptBookingDate">AppointmentDate</label>
                            <input asp-for="AptBookingDate" type="date" class="form-control" id="aptbookingdate" />
                            <span asp-validation-for="AptBookingDate" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="AptBookingTime">AppointmentTime</label>
                            <input asp-for="AptBookingTime" type="time" class="form-control" id="aptbookingtime" />
                            <span asp-validation-for="AptBookingTime" class="text-danger"></span>
                        </div>

                    </div>
                </div>

                <div class="card-footer">

                    <button type="submit" class="btn btn-default ">Cancel</button>
                    <button type="submit" class="btn btn-info float-right">SaveAppointment</button>
                </div>

            </form>
        </div>
    </div>
</div>
</body>
</html>
@section Scripts
    {
    
    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            @Html.Raw(ViewBag.Message)
        </script>
    }
    <script>
        $(document).ready(function () {
            // Function to validate the form
            function validateForm() {
                var valid = true;

                // Validate Firstname
                var firstname = $("#firstname").val();
                if (!firstname || firstname.length < 4 || firstname.length > 20 || !/^[A-Za-z]+$/.test(firstname)) {
                    valid = false;
                    $("#firstname").addClass("is-invalid");
                } else {
                    $("#firstname").removeClass("is-invalid");
                }

                // Validate Lastname
                var lastname = $("#lastname").val();
                if (!lastname || lastname.length < 4 || lastname.length > 20 || !/^[A-Za-z]+$/.test(lastname)) {
                    valid = false;
                    $("#lastname").addClass("is-invalid");
                } else {
                    $("#lastname").removeClass("is-invalid");
                }

                // Validate Email
                var email = $("#email").val();
                var emailRegex = /^[^\s]+[^\s]+\.[^\s]+$/;
                if (!email || !emailRegex.test(email)) {
                    valid = false;
                    $("#email").addClass("is-invalid");
                } else {
                    $("#email").removeClass("is-invalid");
                }

                // Validate Phoneno
                var phoneno = $("#contactno").val();
                if (!phoneno || !/^\d{10}$/.test(phoneno)) {
                    valid = false;
                    $("#contactno").addClass("is-invalid");
                } else {
                    $("#contactno").removeClass("is-invalid");
                }

                // Validate Age
                var age = $("#age").val();
                if (!age || age < 1 || age > 110) {
                    valid = false;
                    $("#age").addClass("is-invalid");
                } else {
                    $("#age").removeClass("is-invalid");
                }

                // Validate Reason
                var reason = $("#reasontype").val();
                if (!reason) {
                    valid = false;
                    $("#reasontype").addClass("is-invalid");
                } else {
                    $("#reasontype").removeClass("is-invalid");
                }

                // Validate Gender
                var gender = $("#PatientGender").val();
                if (!gender || gender === "Please select") {
                    valid = false;
                    $("#PatientGender").addClass("is-invalid");
                } else {
                    $("#PatientGender").removeClass("is-invalid");
                }

                return valid;
            }

            // Set tomorrow's date to the next available working day
            var tomorrow = new Date();
            var oneYearFromNow = new Date();
            oneYearFromNow.setFullYear(oneYearFromNow.getFullYear() + 1);

            while (tomorrow.getDay() === 0 || tomorrow.getDay() === 6) {
                tomorrow.setDate(tomorrow.getDate() + 1);
            }

            // Ensure that the date is within the next year
            if (tomorrow > oneYearFromNow) {
                tomorrow = oneYearFromNow;
            }

            var tomorrowISOString = tomorrow.toISOString().split('T')[0];
            $("#aptbookingdate").val(tomorrowISOString);

            // Disable past dates
            $("#aptbookingdate").attr('min', tomorrowISOString);

            // Set max date to one year from today
            var oneYearFromToday = new Date();
            oneYearFromToday.setFullYear(oneYearFromToday.getFullYear() + 1);
            var oneYearFromTodayISOString = oneYearFromToday.toISOString().split('T')[0];
            $("#aptbookingdate").attr('max', oneYearFromTodayISOString);

            // Define holidays and vacation periods (format: 'YYYY-MM-DD')
            var disabledDates = ['2023-01-01', '2023-07-04', '2023-12-25'];
            var vacationStart = '2023-08-01';
            var vacationEnd = '2023-08-15';

            // Set up the datepicker with customizations
            $("#aptbookingdate").change(function () {
                var dateText = $(this).val();
                var selectedDate = new Date(dateText);
                var dayOfWeek = selectedDate.getDay();

                // Sunday is 0, Saturday is 6
                if (dayOfWeek === 0) {
                    // Display SweetAlert popup for weekends
                    Swal.fire({
                        title: 'Warning!',
                        text: 'Pls Contact Admin to book on this date',
                        icon: 'warning',
                        confirmButtonText: 'OK'
                    });

                    // Clear the input
                    $(this).val('');
                } else {
                    // Check if the selected date is a holiday or within the vacation period
                    var dateString = selectedDate.toISOString().split('T')[0];

                    if ($.inArray(dateString, disabledDates) !== -1 || (dateString >= vacationStart && dateString <= vacationEnd)) {
                        // Display SweetAlert popup for disabled dates or vacation days
                        Swal.fire({
                            title: 'Warning!',
                            text: 'This date is not available for booking.',
                            icon: 'warning',
                            confirmButtonText: 'OK'
                        });

                        // Clear the input
                        $(this).val('');
                    }
                }
            });

            // Attach click event listener to the SaveAppointment button
            $(".btn-info").click(function (event) {
                // Prevent the default form submission behavior
                event.preventDefault();

                // Call the validateForm function to perform form validation
                if (validateForm()) {
                    // If the form is valid, submit the form
                    $("#register-form").submit();
                }
            });

            // Alternatively, you can attach the form submission event directly to the form element
            $("#register-form").submit(function (event) {
                // Call the validateForm function to perform form validation
                if (!validateForm()) {
                    // If the form is invalid, prevent the default form submission behavior
                    event.preventDefault();
                }
            });
        });
    </script>



    <script type="text/javascript">
        $("#DDLAptCategory").change(function () {
            var aptId = $(this).val();
            if (aptId == "self") {
                $.get("/Appointments/GetAppointment", { type: aptId }, function (resposedata) {
                    var data = JSON.parse(resposedata);
                    $('#firstname').val(data[0].Fname).prop('readonly', true);
                    $('#lastname').val(data[0].Lname).prop('readonly', true);
                    $('#age').val(data[0].Age).prop('readonly', true);
                    $('#contactno').val(data[0].Phoneno).prop('readonly', true);
                    $('#email').val(data[0].Email).prop('readonly', true);
                });
            } else {
                $('#firstname').val('');
                $('#lastname').val('');
                $('#age').val('');
                $('#contactno').val('');
                $('#email').val('');

            }
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            // Check if there is a message in TempData
            var swalMessage = '@TempData["SwalMessage"]';
            var swalType = '@TempData["SwalType"]';

            // Function to display the Swal alert
            function displayAlert() {
                if (swalMessage !== '') {
                    Swal.fire({
                        icon: swalType,
                        title: swalMessage,
                        showConfirmButton: false,
                        timer: 5000 // Display for 5 seconds
                    });
                }
            }

            // Call the displayAlert function when the document is ready
            displayAlert();
        });
    </script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
   <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   

}
