@{
    Layout = "";
    var sourceTitle = TempData["Title"] as string;
}
@model Zencareservice.Models.OtpVerificationModel
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="~/css/my-login.css">
    <link rel="icon" type="image/x-icon" href="~/assets/img/favicon.png">
    <title> OTP verification</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body onload="startTimer()" class="my-login-page">
    <section class="h-100">
        <div class="container h-100">
            <div class="row justify-content-md-center h-100">
                <div class="card-wrapper">
                    <div class="brand">
                        <img src="~/images/signup-zencare.png" alt="logo">
                    </div>
                    <div class="card fat">
                        <div class="card-body">
                            <h4 class="card-title" style="text-align:center; font-weight:bold;">OTP Verification</h4>
                            <div>
                                <p>We have sent an OTP to your email: @Model.OTPEmail</p>
                            </div>
                            <form method="POST" class="my-login-validation" novalidate="" asp-action="VerifyOtp" asp-controller="Account">
                                <div class="form-group">
                                    <label asp-for="OTPEmail">Email</label>
                                    <input asp-for="OTPEmail" id="otpEmail" class="form-control" readonly />
                                    <span asp-validation-for="OTPEmail" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <div class="input-group">
                                        <input type="text" id="otpInput" class="form-control" oninput="limitLength()" maxlength="6" placeholder="Enter OTP" onpaste="return false" ondrop="return false" asp-for="OTP" />
                                        <span asp-validation-for="OTP"></span>
                                        <div class="input-group-append">
                                            <span class="input-group-text">
                                                <span id="timer" style="font-size: smaller;"></span>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-0">
                                    <button type="button" onclick="validateOTP()" id="validateBtn" class="btn btn-primary btn-block">Validate</button>
                                    <button type="button" onclick="resendOTP()" id="resendBtn" class="btn btn-primary btn-block" style="display: none;">Resend</button>
                                </div>
                                <input type="hidden" id="sourcePage" value="@sourceTitle" />
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <script type="text/javascript">
        $(document).ready(function () {
            var timer;
            var timeLeft;

            function startTimer() {
                timeLeft = 300; // 5 minutes
                clearInterval(timer);
                timer = setInterval(updateTimer, 1000);
                $("#otpInput").prop("disabled", false);
                $("#validateBtn").prop("disabled", false);
            }

            function updateTimer() {
                var minutes = Math.floor(timeLeft / 60);
                var seconds = timeLeft % 60;
                $("#timer").text(minutes.toString().padStart(2, '0') + ":" + seconds.toString().padStart(2, '0'));
                timeLeft--;
                if (timeLeft <= 0) {
                    clearInterval(timer);
                    $("#timer").text("0:00");
                    $("#otpInput").prop("disabled", true);
                    $("#validateBtn").prop("disabled", true);
                    $("#resendBtn").show();
                }
            }

            function showSweetAlert(icon, title, text) {
                Swal.fire({
                    icon: icon,
                    title: title,
                    text: text,
                    showConfirmButton: false,
                    timer: 1500
                });
            }

            function validateOTP() {
                var otp = $("#otpInput").val();
                var email = $("#otpEmail").val();
                var sourcePage = $("#sourcePage").val(); // Get the source page from the hidden input field

                if (otp.length != 6 || isNaN(otp)) {
                    showSweetAlert('error', 'Oops...', 'Please enter a valid 6-digit OTP!');
                    return;
                }

                $.ajax({
                    url: '@Url.Action("VerifyOtp", "Account")',
                    type: 'POST',
                    data: JSON.stringify({
                        OTPEmail: email,
                        OTP: otp,
                        Source: sourcePage
                    }),
                    contentType: 'application/json',
                    success: function (response) {
                        if (response.success) {
                            showSweetAlert('success', 'Success!', 'OTP validated successfully!');
                            setTimeout(function () {
                                window.location.href = response.redirectUrl;
                            }, 1500); // Redirect after SweetAlert closes
                        } else {
                            showSweetAlert('error', 'Oops...', response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        showSweetAlert('error', 'Oops...', 'An error occurred while validating OTP!');
                    }
                });
            }

            function resendOTP() {
                startTimer();
                $("#resendBtn").hide();
            }

            function limitLength() {
                var input = $("#otpInput");
                if (input.val().length > 6) {
                    input.val(input.val().slice(0, 6));
                }
            }

            // Display alerts based on TempData or ViewBag messages
            var swalMessage = '@TempData["SwalMessage"]';
            var swalType = '@TempData["SwalType"]';

            if (swalMessage !== '') {
                showSweetAlert(swalType, swalMessage);
            }

            var message = '@ViewBag.Message';
            switch (message) {
                case 'VerificationOTP':
                    showSweetAlert('success', 'OTP Sent', 'Please enter the OTP to continue!');
                    break;
                case 'OTPFailed':
                    showSweetAlert('error', 'Oops...', 'Please try again!');
                    break;
                case 'InvalidOTP':
                    showSweetAlert('warning', 'Oops...', 'Please try again!');
                    break;
            }

            // Initialize the timer and bind button actions
            startTimer();
            $("#validateBtn").on("click", validateOTP);
            $("#resendBtn").on("click", resendOTP);
            $("#otpInput").on("input", limitLength);
        });
    </script>

</body>
</html>
