@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Edit Prescription";
}
@model Zencareservice.Models.Prescs

<!DOCTYPE html>
<html>
<head>
    <title>Edit Prescription</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="Gopi">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <style>
        .form-control {
            font-size: 14px;
        }

        table {
            font-size: 14px;
        }
    </style>
</head>
<body>
    <form class="prescription" id="prescriptionForm" method="POST"  asp-action="UpdateHeadPrescription" asp-controller="Prescriptions">
        <section class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1>Prescription</h1>
                    </div>
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item"><a asp-action="Presclist" asp-controller="Prescriptions">Prescription List</a></li>
                            <li class="breadcrumb-item active"><b style="color:black">Edit Prescription</b></li>
                        </ol>
                    </div>
                </div>
            </div>
        </section>
        <div class="container-fluid">
            <div class="card card-success">
                <div class="card-header">
                    <h1 class="card-title">@ViewData["Title"]</h1>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <label asp-for="AptCode">Prescription Category</label>
                            <input asp-for="AptCode" type="text" class="form-control" id="aptcode" readonly />                         
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="PrsCode">Prescription Code</label>
                            <input asp-for="PrsCode" type="text" class="form-control" id="prscode" readonly />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <label asp-for="PatientFirstName">Patient First Name</label>
                            <input asp-for="PatientFirstName" type="text" class="form-control" id="pfname" readonly />
                            <span asp-validation-for="PatientFirstName" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="PatientLastName">Patient Last Name</label>
                            <input asp-for="PatientLastName" type="text" class="form-control" id="plname" readonly />
                            <span asp-validation-for="PatientLastName" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="Patientphoneno">Contact No</label>
                            <input asp-for="Patientphoneno" type="tel" class="form-control" id="patcontact" readonly />
                            <span asp-validation-for="Patientphoneno" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="PatientEmail">Patient Email</label>
                            <input asp-for="PatientEmail" type="text" class="form-control" id="patemail" readonly />
                            <span asp-validation-for="PatientEmail" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <label asp-for="PatientAge">Age</label>
                            <input asp-for="PatientAge" type="text" class="form-control" id="patage" readonly />
                            <span asp-validation-for="PatientAge" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="PatBloodgroup">Patient Bloodgroup</label>
                            <input asp-for="PatBloodgroup" type="text" class="form-control" id="PatBloodgroup" readonly />
                            <span asp-validation-for="PatBloodgroup" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="PatWeight">Patient Weight</label>
                            <input asp-for="PatWeight" type="number" class="form-control" min="0" max="180" id="pweight" placeholder="in Kgs" readonly />
                            <span asp-validation-for="PatWeight" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="DoctorFirstName">Doctor First Name</label>
                            <input asp-for="DoctorFirstName" type="text" class="form-control" id="dfname" readonly />
                            <span asp-validation-for="DoctorFirstName" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <a href="#" onclick="createTable()">
                        <ion-icon name="add-circle-outline"></ion-icon> Add Medication
                    </a>
                    <table id="example1" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>SlNo</th>
                                <th>Prescription</th>
                                <th>Dosage</th>
                                <th>No of Days</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.showlist1)
                            {
                                <tr>
                                    <td>@item.SlNo</td>
                                    <td><input type="text" class="form-control" value="@item.Prescription" /></td>
                                    <td>
                                        <input type="range" class="form-control" min="0" max="1000" value="@item.Dosage" oninput="updateDosageIndicator(this.value, @item.SlNo)" />
                                        <span id="dosageIndicator_@item.SlNo">@item.Dosage mg</span>
                                    </td>
                                    <td>
                                        <input type="number" class="form-control" value="@item.NoOfDays" min="0" max="100" />
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-danger btn-sm" onclick="deleteRow(this)">
                                            <span class="glyphicon glyphicon-trash"></span> Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="card-footer">
                    <button type="button" class="btn btn-default" onclick="resetForm()">Cancel</button>
                    <button type="submit" class="btn btn-success float-right" id="savePrescription">Update Prescription</button>
                </div>
            </div>
        </div>
    </form>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            window.createTable = function () {
                var tbody = document.querySelector('#example1 tbody');
                var row = tbody.insertRow();
                var slNoCell = row.insertCell(0);
                var prescriptionCell = row.insertCell(1);
                var dosageCell = row.insertCell(2);
                var noofdaysCell = row.insertCell(3);
                var actionCell = row.insertCell(4);

                var currentRows = tbody.rows.length;
                slNoCell.textContent = currentRows;

                prescriptionCell.innerHTML = '<input type="text" class="form-control">';
                noofdaysCell.innerHTML = '<input type="number" class="form-control" value="0" min="0" max="100">';

                var dosageValue = 5;
                var maxDosage = 1000;
                dosageCell.innerHTML = '<input type="range" class="form-control" min="0" max="' + maxDosage + '" value="' + dosageValue + '" oninput="updateDosageIndicator(this.value, ' + currentRows + ')"><span id="dosageIndicator_' + currentRows + '">' + dosageValue + ' mg</span>';

                actionCell.innerHTML = '<button type="button" class="btn btn-danger btn-sm" onclick="deleteRow(this)"><span class="glyphicon glyphicon-trash"></span> Delete</button>';
            };

            window.updateDosageIndicator = function (value, slNo) {
                document.getElementById('dosageIndicator_' + slNo).textContent = value + ' mg';
            };

            window.deleteRow = function (button) {
                var row = button.closest('tr');
                row.parentNode.removeChild(row);
                updateSlNo();
            };

            function updateSlNo() {
                var rows = document.querySelectorAll('#example1 tbody tr');
                rows.forEach((row, index) => {
                    row.cells[0].textContent = index + 1;
                });
            }

            window.validateForm = function () {
                var rows = document.querySelectorAll('#example1 tbody tr');
                if (rows.length === 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Please add at least one medication!'
                    });
                    return false;
                }

                for (var i = 0; i < rows.length; i++) {
                    var row = rows[i];
                    var prescription = row.querySelector('input[type="text"]').value;
                    var dosage = row.querySelector('input[type="range"]').value;
                    var noofdays = row.querySelector('input[type="number"]').value;

                    if (prescription.trim() === '') {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: 'Please enter a Prescription Item for all rows!'
                        });
                        return false;
                    }

                    if (dosage == 5) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: 'Dosage value has not been changed'
                        });
                        return false;
                    }

                    if (noofdays.trim() === '' || isNaN(parseInt(noofdays)) || parseInt(noofdays) < 0 || parseInt(noofdays) == 0) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: 'Please enter a valid number of days greater than 0 for all rows!'
                        });
                        return false;
                    }
                }

                return true;
            };

            $(document).on('submit', '#prescriptionForm', function (event) {
                event.preventDefault();
                if (!validateForm()) {
                    return;
                }

                var aptcode = document.getElementById('aptcode').value;
                var prscode = document.getElementById('prscode').value;

                var prescriptions = [];
                $('#example1 tbody tr').each(function () {
                    var row = $(this);
                    var prescription = {
                        SlNo: row.find('td').eq(0).text(),
                        Prescription: row.find('input[type="text"]').val(),
                        Dosage: row.find('input[type="range"]').val(),
                        NoOfDays: row.find('input[type="number"]').val(),
                        AptCode: aptcode,
                        PrsCode: prscode
                    };
                    prescriptions.push(prescription);
                });

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Prescedit", "Prescriptions")',
                    data: JSON.stringify(prescriptions),
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (response) {
                        window.location.href = '@Url.Action("Presclist", "Prescriptions")',
                        Swal.fire('Success', 'Prescription saved successfully!', 'success');
                      
                    },
                    error: function (xhr, status, error) {
                        Swal.fire('Error', 'An error occurred while saving the prescription.', 'error');
                    }
                });
            });

            window.resetForm = function () {
                window.location.href = '@Url.Action("Presclist", "Prescriptions")';
            };
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            // Check if there is a message in TempData
            var swalMessage = '@TempData["SwalMessage"]';
            var swalType = '@TempData["SwalType"]';

            // Function to display the Swal alert
            function displayAlert() {
                if (swalMessage !== '') {
                    Swal.fire({
                        icon: swalType,
                        title: swalMessage,
                        showConfirmButton: false,
                        timer: 5000 // Display for 5 seconds
                    });
                }
            }

            // Call the displayAlert function when the document is ready
            displayAlert();
        });
    </script>

</body>
</html>

